{"version":3,"sources":["style/theme.js","resources/routes/frontEndRoutes.js","components/Navbar.js","pages/Home.js","dummy/auth.js","pages/LogIn.js","pages/SignUp.js","components/GraphCard.js","components/GraphForm.js","dummy/API.js","pages/AvailableGraphs.js","components/InsertNodeSidebar.js","pages/Graph.js","pages/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","purple","secondary","green","FRONT_END_ROUTE","LOGIN","BASE_URL","SIGN_UP","HOME","AVAILABLE_GRAPHS","AVAILABLE_LANGUAGES","GRAPH","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","isLoggedIn","logout","classes","className","AppBar","position","Toolbar","to","style","textDecoration","color","Typography","variant","Button","onClick","Home","textAlign","width","margin","user","c","username","password","isAdmin","isDoctor","isTranslator","marina","doctor","translator","LogIn","userProfile","setUserProfile","useState","setUsername","setPassword","showPassword","setShowPassword","error","setError","display","flexDirection","marginTop","TextField","label","value","onChange","event","target","FormControl","InputLabel","htmlFor","Input","id","type","endAdornment","InputAdornment","IconButton","aria-label","onMouseDown","preventDefault","userData","login_DUMMY","console","log","SignUp","formControl","minWidth","selectEmpty","passwordConfirmation","setPasswordConfirmation","showPasswordConfirmation","setShowPasswordConfirmation","doctorToken","setDoctorToken","language","setLanguage","region","setRegion","availableLanguages","setAvailableLanguages","availableRegions","setAvailableRegions","setIsTranslator","handleMouseDownPassword","useEffect","dummyLanguages","dummyRegions","sendSignUpReqToBackEnd","replace","FormHelperText","component","FormLabel","RadioGroup","name","FormControlLabel","control","Radio","Select","labelId","map","l","MenuItem","r","placeholder","length","message","1","2","ErrorMessage","media","height","GraphCard","tags","imageURL","summary","editGraphMetaData","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","tag","Chip","size","CardActions","pathname","toLowerCase","split","join","state","GraphForm","graphData","setDrawerIsOpen","setTitle","setSummary","setTags","setImageURL","setIsNewGraph","Object","keys","multiline","rows","src","alt","maxWidth","TAG","GRAPHS","nodesAndLinksForGraph","data","isQuestion","x","y","source","animated","3","AvailableGraphs","canAddGraph","graphs","setGraphs","drawerIsOpen","selectedGraph","setSelectedGraph","fetchGraphs","openGraphForm","graph","Drawer","anchor","open","onClose","flexWrap","justifyContent","startIcon","InsertNodeSidebar","onDragStart","nodeType","dataTransfer","setData","effectAllowed","padding","borderStyle","borderRadius","borderColor","borderWidth","draggable","Graph","canEdit","location","canTranslate","useLocation","isLoading","setIsLoading","reactFlowWrapper","useRef","reactFlowInstance","setReactFlowInstance","elements","setElements","fetchGraphData","CircularProgress","ref","onElementsRemove","elementsToRemove","els","removeElements","onConnect","params","addEdge","onLoad","_reactFlowInstance","fitView","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","project","clientX","left","clientY","top","newNode","es","concat","onDragOver","dropEffect","snapToGrid","snapGrid","deleteKeyCode","nodesConnectable","onElementClick","element","nodeStrokeColor","n","background","nodeColor","nodeBorderRadius","gap","NotFound","App","loggedOutPorfile","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e573e3ec.chunk.js","sourcesContent":["/**\r\n * Material UI relies heavily on the notion of primary and secondary colors.\r\n * We use this file to control them.\r\n */\r\n\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport purple from \"@material-ui/core/colors/purple\";\r\nimport green from \"@material-ui/core/colors/green\";\r\n\r\n// TODO change these colors to stuff that we actually like\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tmain: purple[500],\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: green[500],\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport default theme;\r\n","/**\r\n * This file exports an object that has all the front-end routes.\r\n */\r\nconst BASE_URL = \"/milare\";\r\n\r\nconst FRONT_END_ROUTE = {\r\n\t/**\r\n\t * Lets user sign in with email and password.\r\n\t * Based on creds, sets their privileges to know if they will edit graphs or add translation.\r\n\t */\r\n\tLOGIN: BASE_URL + \"/log-in\",\r\n\r\n\t/**\r\n\t * Lets the user sign up and potentially pick a role.\r\n\t *\r\n\t */\r\n\tSIGN_UP: BASE_URL + \"/sign-up\",\r\n\r\n\t/**\r\n\t * Landing page before user logis in.\r\n\t * Advertizes the project and the app.\r\n\t */\r\n\tHOME: BASE_URL + \"/\",\r\n\r\n\t/**\r\n\t * Where user can pick what graph to work on.\r\n\t * Doctors/admin also have the ability to add a graph.\r\n\t */\r\n\tAVAILABLE_GRAPHS: BASE_URL + \"/available-graphs\",\r\n\r\n\t/**\r\n\t * Where user picks language and region/dialect\r\n\t */\r\n\tAVAILABLE_LANGUAGES: BASE_URL + \"/available-languages\",\r\n\r\n\t/**\r\n\t * Where user can edit (a single) graph.\r\n\t * Takes the name of the graph after /graph/<NAME_OF_GRAPH>\r\n\t */\r\n\tGRAPH: BASE_URL + \"/graph\",\r\n};\r\n\r\nexport default FRONT_END_ROUTE;\r\n","/**\r\n * Lets user logout, or go to all-graphs page.\r\n */\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FRONT_END_ROUTE from \"../resources/routes/frontEndRoutes\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t},\r\n\ttitle: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n}));\r\n\r\nconst Navbar = ({ isLoggedIn, logout }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto={FRONT_END_ROUTE.HOME}\r\n\t\t\t\t\t\tstyle={{ textDecoration: \"none\", color: \"white\" }}\r\n\t\t\t\t\t\tclassName={classes.title}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Typography variant=\"h6\">Milare</Typography>\r\n\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t{isLoggedIn ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tto={FRONT_END_ROUTE.AVAILABLE_GRAPHS}\r\n\t\t\t\t\t\t\t\tstyle={{ textDecoration: \"none\", color: \"white\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Button>Graph Menu</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<Button color=\"inherit\" onClick={() => logout()}>\r\n\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tto={FRONT_END_ROUTE.SIGN_UP}\r\n\t\t\t\t\t\t\t\tstyle={{ textDecoration: \"none\", color: \"white\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Button color=\"inherit\">Sign Up</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tto={FRONT_END_ROUTE.LOGIN}\r\n\t\t\t\t\t\t\t\tstyle={{ textDecoration: \"none\", color: \"white\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Button color=\"inherit\">Login</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","/**\r\n * This is the landing page of the website.\r\n * It gives the user an introduction about the project.\r\n * It tells the user how they can participate.\r\n * It tells doctors how they can use our project in their clinics.\r\n */\r\n\r\nimport React from \"react\";\r\n\r\nconst Home = () => {\r\n\treturn (\r\n\t\t<div style={{ textAlign: \"center\" }}>\r\n\t\t\t<h1>Welcome to Milare</h1>\r\n\t\t\t<p style={{ width: \"80%\", margin: \"auto\" }}>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. In volutpat\r\n\t\t\t\t\tfelis sed sapien molestie, in aliquet tellus vulputate. Curabitur eget\r\n\t\t\t\t\tiaculis quam, id cursus tortor. Nullam consequat sem non nibh aliquam\r\n\t\t\t\t\tconsectetur. Duis lacus tellus, congue maximus augue sit amet,\r\n\t\t\t\t\tfermentum tristique massa. Pellentesque aliquet eleifend pellentesque.\r\n\t\t\t\t\tMaecenas lacinia, odio sit amet fermentum volutpat, sem turpis\r\n\t\t\t\t\tfringilla risus, ac porta leo purus eu lectus. Integer et velit eu\r\n\t\t\t\t\tmassa faucibus euismod a vel dolor.\r\n\t\t\t\t</p>{\" \"}\r\n\t\t\t\t<p>\r\n\t\t\t\t\tDuis ut finibus erat. Vestibulum pellentesque mattis consequat. Sed\r\n\t\t\t\t\tvelit augue, sodales in lorem eu, tincidunt porta tortor. Mauris neque\r\n\t\t\t\t\tlectus, semper eget risus sed, porta rhoncus lectus. Quisque lobortis\r\n\t\t\t\t\tnisl id nulla lobortis congue. Praesent commodo odio ac libero posuere\r\n\t\t\t\t\tsodales. Praesent tempor pulvinar eros, eu tristique orci eleifend ut.\r\n\t\t\t\t\tAenean volutpat a justo at consequat. Quisque nec neque rhoncus,\r\n\t\t\t\t\tfermentum risus eu, maximus ipsum. Nunc pulvinar ex sed ligula\r\n\t\t\t\t\tplacerat, at facilisis lacus pellentesque. Donec varius ante cursus\r\n\t\t\t\t\tdiam finibus, vitae tincidunt ipsum aliquam.\r\n\t\t\t\t</p>{\" \"}\r\n\t\t\t\t<p>\r\n\t\t\t\t\tNulla sed lectus at nulla scelerisque molestie. Maecenas fringilla\r\n\t\t\t\t\tenim id purus commodo, in pharetra mi bibendum. Integer ac enim nec\r\n\t\t\t\t\ttortor hendrerit tempus. Cras sed elementum lectus, a viverra sem.\r\n\t\t\t\t\tClass aptent taciti sociosqu ad litora torquent per conubia nostra,\r\n\t\t\t\t\tper inceptos himenaeos. In vel iaculis ex. Donec mollis sem mauris.\r\n\t\t\t\t\tDuis at suscipit elit. Donec aliquet, nisi eu venenatis lacinia, metus\r\n\t\t\t\t\tlorem lobortis nibh, eu sodales ligula nisi eu ipsum. In bibendum sem\r\n\t\t\t\t\tcommodo, ullamcorper nulla et, congue libero. Sed sed mauris interdum\r\n\t\t\t\t\torci auctor convallis. Sed in ligula pellentesque, aliquet ligula sit\r\n\t\t\t\t\tamet, sagittis odio. Aenean aliquam mattis sapien non hendrerit.\r\n\t\t\t\t\tMaecenas mattis ipsum ac pellentesque congue. Nulla eget sollicitudin\r\n\t\t\t\t\tnibh.\r\n\t\t\t\t</p>{\" \"}\r\n\t\t\t\t<p>\r\n\t\t\t\t\tNulla facilisi. Fusce eu mauris tempor, scelerisque quam a, pretium\r\n\t\t\t\t\test. Nulla lobortis laoreet facilisis. Vivamus eget pellentesque\r\n\t\t\t\t\tturpis. Fusce eleifend tortor sed dolor consectetur facilisis. Proin\r\n\t\t\t\t\tdictum lorem sapien, a aliquam lorem commodo eu. Vestibulum nisi\r\n\t\t\t\t\trisus, aliquet quis egestas in, dapibus id ligula. Aenean eget dui\r\n\t\t\t\t\tposuere, condimentum nisl ut, aliquet sem. Sed interdum quam et velit\r\n\t\t\t\t\tvenenatis, quis condimentum nisi venenatis. Sed eu lorem ac odio\r\n\t\t\t\t\tultrices luctus a non ante. Etiam laoreet vehicula vulputate. Nunc\r\n\t\t\t\t\tcongue, ligula vitae rhoncus vulputate, erat eros imperdiet enim, in\r\n\t\t\t\t\tvolutpat orci eros nec lorem. Pellentesque habitant morbi tristique\r\n\t\t\t\t\tsenectus et netus et malesuada fames ac turpis egestas. Proin faucibus\r\n\t\t\t\t\tnibh sit amet tincidunt tempor. Cras fermentum felis varius, bibendum\r\n\t\t\t\t\tnulla at, tempor orci. Mauris vulputate consectetur dolor, eu cursus\r\n\t\t\t\t\tipsum porttitor at.\r\n\t\t\t\t</p>{\" \"}\r\n\t\t\t\t<p>\r\n\t\t\t\t\tPraesent quis vehicula ipsum, ut aliquet dolor. Donec a cursus est.\r\n\t\t\t\t\tPraesent pretium nibh ac porta malesuada. Nulla ut ex nec urna\r\n\t\t\t\t\tfacilisis elementum. In at erat pretium, consequat quam in, gravida\r\n\t\t\t\t\tleo. Donec pretium augue non mollis mattis. Donec metus neque,\r\n\t\t\t\t\tvehicula vehicula felis at, egestas consequat ligula. Sed elementum\r\n\t\t\t\t\tsuscipit dolor, non tempus quam gravida ut. Nunc tristique leo nec\r\n\t\t\t\t\tnisl consequat auctor.\r\n\t\t\t\t</p>{\" \"}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","/**\r\n * dummy functions to mimic behavior of authentication.\r\n */\r\n\r\nexport const login_DUMMY = (username, password) => {\r\n\tif (user[username].password == password) return user[username];\r\n\treturn { error: \"I can't authenticate you\" };\r\n};\r\n\r\nexport const signup_DUMMY = (\r\n\tusername,\r\n\tpassword,\r\n\tisDoctor,\r\n\tisTranslator,\r\n\tdoctorToken = \"\"\r\n) => {\r\n\tif (isDoctor) {\r\n\t\tif (doctorToken == DOCTOR_TOKEN) {\r\n\t\t\tuser[username] = {\r\n\t\t\t\tusername,\r\n\t\t\t\tpassword,\r\n\t\t\t\tisAdmin: false,\r\n\t\t\t\tisDoctor: true,\r\n\t\t\t\tisTranslator: false,\r\n\t\t\t};\r\n\t\t\treturn user[username];\r\n\t\t}\r\n\t} else if (isTranslator) {\r\n\t\tuser[username] = {\r\n\t\t\tusername,\r\n\t\t\tpassword,\r\n\t\t\tisAdmin: false,\r\n\t\t\tisDoctor: false,\r\n\t\t\tisTranslator: true,\r\n\t\t};\r\n\t\treturn user[username];\r\n\t}\r\n};\r\n\r\n/**\r\n * dummy object to represent data base.\r\n */\r\nconst user = {\r\n\tc: {\r\n\t\tusername: \"c\",\r\n\t\tpassword: \"c\",\r\n\t\tisAdmin: true,\r\n\t\tisDoctor: false,\r\n\t\tisTranslator: false,\r\n\t},\r\n\tmarina: {\r\n\t\tusername: \"marina\",\r\n\t\tpassword: \"doctors are lovely\",\r\n\t\tisAdmin: true,\r\n\t\tisDoctor: false,\r\n\t\tisTranslator: false,\r\n\t},\r\n\tdoctor: {\r\n\t\tusername: \"doctor\",\r\n\t\tpassword: \"doctor\",\r\n\t\tisAdmin: false,\r\n\t\tisDoctor: true,\r\n\t\tisTranslator: false,\r\n\t},\r\n\ttranslator: {\r\n\t\tusername: \"translator\",\r\n\t\tpassword: \"translator\",\r\n\t\tisAdmin: false,\r\n\t\tisDoctor: false,\r\n\t\tisTranslator: true,\r\n\t},\r\n};\r\n\r\nconst DOCTOR_TOKEN = \"doctors do not know everything\";\r\n","/**\r\n * Page where user can log in.\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nimport { login_DUMMY } from \"../dummy/auth\";\r\nimport FRONT_END_ROUTE from \"../resources/routes/frontEndRoutes\";\r\n\r\nconst LogIn = ({ userProfile, setUserProfile }) => {\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [showPassword, setShowPassword] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst handleClickShowPassword = () => {\r\n\t\tsetShowPassword(!showPassword);\r\n\t};\r\n\r\n\tconst handleMouseDownPassword = (event) => {\r\n\t\tevent.preventDefault();\r\n\t};\r\n\r\n\tconst login = () => {\r\n\t\tconst userData = login_DUMMY(username, password);\r\n\t\tif (userData[error]) setError(userData[error]);\r\n\t\telse console.log(userData);\r\n\t\tsetUserProfile({\r\n\t\t\tusername: userData.username,\r\n\t\t\tisAdmin: userData.isAdmin,\r\n\t\t\tisDoctor: userData.isDoctor,\r\n\t\t\tisTranslator: userData.isTranslator,\r\n\t\t});\r\n\t};\r\n\r\n\tconst isLoggedIn = () => {\r\n\t\treturn userProfile.username != \"\";\r\n\t};\r\n\r\n\tif (isLoggedIn()) return <Redirect to={FRONT_END_ROUTE.AVAILABLE_GRAPHS} />;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\tflexDirection: \"column\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<h1 style={{ marginTop: 30 }}>Log In</h1>\r\n\t\t\t<form>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\tvalue={username}\r\n\t\t\t\t\tonChange={(event) => setUsername(event.target.value)}\r\n\t\t\t\t\tstyle={{ margin: 50, marginTop: 20, width: 300 }}\r\n\t\t\t\t/>\r\n\t\t\t\t<br />\r\n\t\t\t\t<FormControl style={{ width: 300 }}>\r\n\t\t\t\t\t<InputLabel htmlFor=\"standard-adornment-password\">\r\n\t\t\t\t\t\tPassword\r\n\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid=\"standard-adornment-password\"\r\n\t\t\t\t\t\ttype={showPassword ? \"text\" : \"password\"}\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={(event) => setPassword(event.target.value)}\r\n\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\taria-label=\"toggle password visibility\"\r\n\t\t\t\t\t\t\t\t\tonClick={handleClickShowPassword}\r\n\t\t\t\t\t\t\t\t\tonMouseDown={handleMouseDownPassword}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{showPassword ? <Visibility /> : <VisibilityOff />}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormControl>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{ margin: 50 }}\r\n\t\t\t\t\tonClick={login}\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</Button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LogIn;\r\n","/**\r\n * This is where a new user signs up.\r\n * They must insert:\r\n * - email\r\n * - password\r\n * - choice of doctor/translator\r\n * - if doctor\r\n * -- doctor token (given by us, so random ppl don't sign up as doctors)\r\n * - if translator\r\n * -- language\r\n * -- region\r\n */\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport FRONT_END_ROUTE from \"../resources/routes/frontEndRoutes\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tminWidth: 120,\r\n\t},\r\n\tselectEmpty: {\r\n\t\tmarginTop: theme.spacing(2),\r\n\t},\r\n}));\r\n\r\nconst SignUp = ({ setUserProfile, isLoggedIn }) => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState(null); // when trying to sign the user up with the back-end\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [showPassword, setShowPassword] = useState(false);\r\n\tconst [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\r\n\tconst [showPasswordConfirmation, setShowPasswordConfirmation] = useState(\r\n\t\tfalse\r\n\t);\r\n\tconst [doctorToken, setDoctorToken] = useState(\"\");\r\n\tconst [language, setLanguage] = useState(null); // TODO make this the language ID\r\n\tconst [region, setRegion] = useState(null); // TODO make this the region ID\r\n\tconst [availableLanguages, setAvailableLanguages] = useState([]);\r\n\tconst [availableRegions, setAvailableRegions] = useState({});\r\n\tconst [isTranslator, setIsTranslator] = useState(true); // if false, then doctor\r\n\r\n\tconst handleMouseDownPassword = (event) => {\r\n\t\tevent.preventDefault();\r\n\t};\r\n\r\n\tconst fetchAvailableLanguagesAndRegions = () => {\r\n\t\t// TODO get them from the back-end\r\n\t\tsetAvailableLanguages(dummyLanguages);\r\n\t\tsetAvailableRegions(dummyRegions);\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tfetchAvailableLanguagesAndRegions();\r\n\t\t},\r\n\t\t[] // do it once when component first renders\r\n\t);\r\n\r\n\tconst signUp = () => {\r\n\t\t// validate emai/username and password before\r\n\t\tif (username.length < 1) {\r\n\t\t\tsetError(<ErrorMessage message={\"Please enter a username!\"} />);\r\n\t\t} else if (password.length < 5) {\r\n\t\t\tsetError(\r\n\t\t\t\t<ErrorMessage message={\"Password is less than 5 characters long!\"} />\r\n\t\t\t);\r\n\t\t} else if (password != passwordConfirmation) {\r\n\t\t\tsetError(\r\n\t\t\t\t<ErrorMessage\r\n\t\t\t\t\tmessage={\"Password and confirmed password do not match!\"}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t} else if (isTranslator) {\r\n\t\t\tif (!language) {\r\n\t\t\t\tsetError(\r\n\t\t\t\t\t<ErrorMessage message={\"Please select a language and a region!\"} />\r\n\t\t\t\t);\r\n\t\t\t} else if (!region) {\r\n\t\t\t\tsetError(<ErrorMessage message={\"Please select a region!\"} />);\r\n\t\t\t} else {\r\n\t\t\t\tsendSignUpReqToBackEnd();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// user is a doctor\r\n\t\t\tsendSignUpReqToBackEnd();\r\n\t\t}\r\n\t};\r\n\r\n\tconst sendSignUpReqToBackEnd = () => {\r\n\t\tsetUserProfile({\r\n\t\t\tusername,\r\n\t\t\tisAdmin: false,\r\n\t\t\tisDoctor: !isTranslator,\r\n\t\t\tisTranslator,\r\n\t\t});\r\n\t};\r\n\r\n\t// once user is signed up and logged in, redirect to main page\r\n\tif (isLoggedIn) return <Redirect to={FRONT_END_ROUTE.AVAILABLE_GRAPHS} />;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\tflexDirection: \"column\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<h1 style={{ marginTop: 30 }}>Sign Up</h1>\r\n\t\t\t{error}\r\n\t\t\t<form>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\tvalue={username}\r\n\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\tsetUsername(event.target.value.replace(/[^a-z0-9]/gi, \"\"))\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstyle={{ margin: 40, marginTop: 20, width: 300 }}\r\n\t\t\t\t/>\r\n\t\t\t\t<br />\r\n\t\t\t\t<FormControl style={{ width: 300 }}>\r\n\t\t\t\t\t<InputLabel htmlFor=\"standard-adornment-password\">\r\n\t\t\t\t\t\tPassword\r\n\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid=\"standard-adornment-password\"\r\n\t\t\t\t\t\ttype={showPassword ? \"text\" : \"password\"}\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\tsetPassword(event.target.value.replace(/[^a-z0-9]/gi, \"\"))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\taria-label=\"toggle password visibility\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => setShowPassword(!showPassword)}\r\n\t\t\t\t\t\t\t\t\tonMouseDown={handleMouseDownPassword}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{showPassword ? <Visibility /> : <VisibilityOff />}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FormHelperText>Only use letters and numbers</FormHelperText>\r\n\t\t\t\t</FormControl>\r\n\t\t\t\t<br />\r\n\t\t\t\t<FormControl style={{ width: 300, margin: 40 }}>\r\n\t\t\t\t\t<InputLabel htmlFor=\"standard-adornment-password\">\r\n\t\t\t\t\t\tConfirm Password\r\n\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid=\"standard-adornment-password\"\r\n\t\t\t\t\t\ttype={showPasswordConfirmation ? \"text\" : \"password\"}\r\n\t\t\t\t\t\tvalue={passwordConfirmation}\r\n\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\tsetPasswordConfirmation(\r\n\t\t\t\t\t\t\t\tevent.target.value.replace(/[^a-z0-9]/gi, \"\")\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\taria-label=\"toggle password visibility\"\r\n\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\tsetShowPasswordConfirmation(!showPasswordConfirmation)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonMouseDown={handleMouseDownPassword}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{showPasswordConfirmation ? (\r\n\t\t\t\t\t\t\t\t\t\t<Visibility />\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<VisibilityOff />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormControl>\r\n\t\t\t\t<br />\r\n\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t<FormLabel component=\"legend\">Role</FormLabel>\r\n\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\taria-label=\"role\"\r\n\t\t\t\t\t\tname=\"role\"\r\n\t\t\t\t\t\tvalue={isTranslator ? \"translator\" : \"doctor\"}\r\n\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\tsetIsTranslator(event.target.value == \"translator\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tvalue=\"translator\"\r\n\t\t\t\t\t\t\tcontrol={<Radio />}\r\n\t\t\t\t\t\t\tlabel=\"Translator\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tvalue=\"doctor\"\r\n\t\t\t\t\t\t\tcontrol={<Radio />}\r\n\t\t\t\t\t\t\tlabel=\"Doctor\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t</FormControl>\r\n\t\t\t\t<br />\r\n\t\t\t\t{isTranslator ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<FormControl style={{ width: 130, marginRight: 40 }}>\r\n\t\t\t\t\t\t\t<InputLabel id=\"language\">Language</InputLabel>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tlabelId=\"language\"\r\n\t\t\t\t\t\t\t\tid=\"language\"\r\n\t\t\t\t\t\t\t\tvalue={language}\r\n\t\t\t\t\t\t\t\tonChange={(event) => setLanguage(event.target.value)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{availableLanguages.map((l) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={l.id}>{l.language}</MenuItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t<FormControl style={{ width: 130 }}>\r\n\t\t\t\t\t\t\t<InputLabel id=\"region\">Region</InputLabel>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tlabelId=\"region\"\r\n\t\t\t\t\t\t\t\tid=\"region\"\r\n\t\t\t\t\t\t\t\tvalue={region}\r\n\t\t\t\t\t\t\t\tonChange={(event) => setRegion(event.target.value)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{language &&\r\n\t\t\t\t\t\t\t\t\tavailableRegions[language].map((r) => (\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={r.id}>{r.region}</MenuItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tvalue={doctorToken}\r\n\t\t\t\t\t\tlabel=\"Token\"\r\n\t\t\t\t\t\tplaceholder=\"Enter token given by recruiter\"\r\n\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\tsetDoctorToken(event.target.value.replace(/[^a-z0-9]/gi, \"\"))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tonClick={signUp}\r\n\t\t\t\t\tstyle={{ margin: 30 }}\r\n\t\t\t\t>\r\n\t\t\t\t\tSign Up\r\n\t\t\t\t</Button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SignUp;\r\n\r\nconst dummyLanguages = [\r\n\t{ language: \"Arabic\", id: 1 },\r\n\t{ language: \"French\", id: 2 },\r\n];\r\nconst dummyRegions = {\r\n\t1: [\r\n\t\t{ region: \"Egypt\", id: 11 },\r\n\t\t{ region: \"Saudi\", id: 12 },\r\n\t],\r\n\t2: [\r\n\t\t{ region: \"Congo\", id: 21 },\r\n\t\t{ region: \"Paris\", id: 22 },\r\n\t],\r\n};\r\n\r\nconst ErrorMessage = ({ message }) => (\r\n\t<p style={{ margin: 10, color: \"red\" }}>{message}</p>\r\n);\r\n","/**\r\n * This component renders a graph card that shows the summary of a graph.\r\n * - name of case\r\n * - tags\r\n * - image\r\n * - quick summary\r\n */\r\n\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FRONT_END_ROUTE from \"../resources/routes/frontEndRoutes\";\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\twidth: 345,\r\n\t\tmargin: 50,\r\n\t},\r\n\tmedia: {\r\n\t\theight: 140,\r\n\t},\r\n});\r\n\r\nconst GraphCard = ({\r\n\tid,\r\n\ttitle,\r\n\ttags,\r\n\timageURL,\r\n\tsummary,\r\n\teditGraphMetaData,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Card className={classes.root}>\r\n\t\t\t<CardActionArea>\r\n\t\t\t\t<CardMedia className={classes.media} image={imageURL} title={title} />\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{tags.length > 0 &&\r\n\t\t\t\t\t\ttags.map((tag) => (\r\n\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\tlabel={tag}\r\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\tstyle={{ margin: 5 }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\t\t\t\t\t\t{summary}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</CardActionArea>\r\n\t\t\t<CardActions>\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={{\r\n\t\t\t\t\t\tpathname:\r\n\t\t\t\t\t\t\tFRONT_END_ROUTE.GRAPH +\r\n\t\t\t\t\t\t\t\"/\" +\r\n\t\t\t\t\t\t\ttitle.toLowerCase().split(\" \").join(\"-\"),\r\n\t\t\t\t\t\tstate: { id },\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tstyle={{ textDecoration: \"none\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button size=\"small\" color=\"primary\">\r\n\t\t\t\t\t\tEdit Graph\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Button size=\"small\" color=\"primary\" onClick={editGraphMetaData}>\r\n\t\t\t\t\tEdit Meta-data\r\n\t\t\t\t</Button>\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default GraphCard;\r\n","/**\r\n * This form lets the user add a new graph or edit an existing graph.\r\n * The form includes the following entires:\r\n * - title (single line text field)\r\n * - summary (multiline)\r\n * - tags (check boxes)\r\n * - image (pick URL and verify it's there)\r\n *\r\n * Props:\r\n * - graphData  [object]: if empty,     it's a new graph, else, we will edit this data\r\n * -                      if not empty, it's an existing graph that will be edited and would have the following props\r\n * -- title     [string]\r\n * -- summary   [string]\r\n * -- tags      [array of strings]\r\n * -- imageURL  [string]\r\n */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst GraphForm = ({ graphData, setDrawerIsOpen }) => {\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [summary, setSummary] = useState(\"\");\r\n\tconst [tags, setTags] = useState([]);\r\n\tconst [imageURL, setImageURL] = useState(\"\");\r\n\r\n\tconst [isNewGraph, setIsNewGraph] = useState(true); // will be determined based on the graphData object\r\n\r\n\tconst [error, setError] = useState(null); // to communicate any back-end errors to the user\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (Object.keys(graphData).length > 0) {\r\n\t\t\t\tsetTitle(graphData.title);\r\n\t\t\t\tsetSummary(graphData.summary);\r\n\t\t\t\tsetTags(graphData.tags);\r\n\t\t\t\tsetImageURL(graphData.imageURL);\r\n\t\t\t\tsetIsNewGraph(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[] // only do it once when component first renders\r\n\t);\r\n\r\n\tconst saveGraph = () => {\r\n\t\t// talk to back-end to update graph is it is not new or post new graph if it is new\r\n\t\tif (isNewGraph) {\r\n\t\t} else {\r\n\t\t}\r\n\t\tsetDrawerIsOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form style={{ width: 500, textAlign: \"center\" }}>\r\n\t\t\t<TextField\r\n\t\t\t\tlabel=\"Title\"\r\n\t\t\t\tvalue={title}\r\n\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\tsetTitle(event.target.value);\r\n\t\t\t\t}}\r\n\t\t\t\tstyle={{ margin: 50, width: \"80%\" }}\r\n\t\t\t/>\r\n\t\t\t<br />\r\n\t\t\t<TextField\r\n\t\t\t\tlabel=\"Summary\"\r\n\t\t\t\tmultiline\r\n\t\t\t\trows={6}\r\n\t\t\t\tvalue={summary}\r\n\t\t\t\tplaceholder=\"Write a brief description of this scenario ...\"\r\n\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\tsetSummary(event.target.value);\r\n\t\t\t\t}}\r\n\t\t\t\tstyle={{ width: \"80%\" }}\r\n\t\t\t/>\r\n\t\t\t<br />\r\n\t\t\t<TextField\r\n\t\t\t\tlabel=\"Image URL\"\r\n\t\t\t\tmultiline\r\n\t\t\t\tvalue={imageURL}\r\n\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\tsetImageURL(event.target.value);\r\n\t\t\t\t}}\r\n\t\t\t\tstyle={{ margin: 50, width: \"80%\" }}\r\n\t\t\t/>\r\n\t\t\t<br />\r\n\t\t\t<img src={imageURL} alt=\"image-preview\" style={{ maxWidth: \"80%\" }} />\r\n\t\t\t<br />\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tonClick={() => saveGraph()}\r\n\t\t\t\tstyle={{ margin: 50 }}\r\n\t\t\t>\r\n\t\t\t\tSave\r\n\t\t\t</Button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default GraphForm;\r\n","/**\r\n * This file has dummy functions that mimic the behavior of the app talking to the back-end.\r\n */\r\n\r\nexport const getAllGraphs = () => {\r\n\treturn GRAPHS;\r\n};\r\n\r\nexport const addNewGraph = (title, summary, imageURL, tags = []) => {\r\n\tgraphIDcounter++;\r\n\r\n\tGRAPHS.append({\r\n\t\tid: graphIDcounter,\r\n\t\ttitle,\r\n\t\tsummary,\r\n\t\timageURL,\r\n\t\ttags,\r\n\t});\r\n\r\n\treturn {\r\n\t\tid: graphIDcounter,\r\n\t\ttitle,\r\n\t\tsummary,\r\n\t\timageURL,\r\n\t\ttags,\r\n\t};\r\n};\r\n\r\nexport const updateGraph = (id, title, summary, imageURL, tags) => {\r\n\tconst graphIndex = GRAPHS.findIndex((graph) => graph.id == id);\r\n\r\n\tGRAPHS[graphIndex].title = title;\r\n\tGRAPHS[graphIndex].summary = summary;\r\n\tGRAPHS[graphIndex].imageURL = imageURL;\r\n\tGRAPHS[graphIndex].tags = tags;\r\n\r\n\treturn GRAPHS[graphIndex];\r\n};\r\n\r\nconst TAG = {\r\n\tCHILDREN: \"children\",\r\n\tSEASONAL: \"seasonal\",\r\n\tCHRONIC: \"chronic\",\r\n};\r\n\r\nconst GRAPHS = [\r\n\t{\r\n\t\tid: 1,\r\n\t\ttitle: \"Back Pain\",\r\n\t\tsummary:\r\n\t\t\t\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. In volutpat felis sed sapien molestie, in aliquet tellus vulputate. Curabitur eget iaculis quam, id cursus tortor. Nullam consequat sem non nibh aliquam consectetur.\",\r\n\r\n\t\timageURL:\r\n\t\t\t\"https://cornerstonephysio.com/wp-content/uploads/2019/07/back-pain.jpg\",\r\n\t\ttags: [TAG.CHRONIC],\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\ttitle: \"Fever\",\r\n\t\tsummary:\r\n\t\t\t\"Nulla sed lectus at nulla scelerisque molestie. Maecenas fringilla enim id purus commodo, in pharetra mi bibendum. Integer ac enim nec tortor hendrerit tempus. Cras sed elementum lectus, a viverra sem. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.\",\r\n\t\timageURL:\r\n\t\t\t\"https://health.clevelandclinic.org/wp-content/uploads/sites/3/2019/02/bodyHappenFever-1006577818-770x553.jpg\",\r\n\t\ttags: [TAG.CHILDREN, TAG.SEASONAL],\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\ttitle: \"Cough\",\r\n\t\tsummary:\r\n\t\t\t\"Duis lacus tellus, congue maximus augue sit amet, fermentum tristique massa. Pellentesque aliquet eleifend pellentesque. Maecenas lacinia, odio sit amet fermentum volutpat, sem turpis fringilla risus, ac porta leo purus eu lectus.\",\r\n\t\timageURL:\r\n\t\t\t\"https://www.clevelandclinic.org/healthinfo/ShowImage.ashx?PIC=4486\",\r\n\t\ttags: [TAG.SEASONAL],\r\n\t},\r\n];\r\n\r\nconst graphIDcounter = 3;\r\n\r\nexport const getGraphWithID = (id) => {\r\n\treturn nodesAndLinksForGraph[id];\r\n};\r\n\r\nconst nodesAndLinksForGraph = {\r\n\t1: [\r\n\t\t{\r\n\t\t\tid: \"1\",\r\n\t\t\ttype: \"input\", // input node\r\n\t\t\tdata: { label: \"Back Pain\", isQuestion: false },\r\n\t\t\tposition: { x: 350, y: 25 },\r\n\t\t},\r\n\t\t// default node\r\n\t\t{\r\n\t\t\tid: \"2\",\r\n\t\t\t// you can also pass a React component as a label\r\n\t\t\tdata: { label: <div>First Question</div>, isQuestion: true },\r\n\t\t\tposition: { x: 50, y: 125 },\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: \"3\",\r\n\t\t\t// you can also pass a React component as a label\r\n\t\t\tdata: { label: <div>Second Question</div>, isQuestion: true },\r\n\t\t\tposition: { x: 350, y: 125 },\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: \"4\",\r\n\t\t\t// you can also pass a React component as a label\r\n\t\t\tdata: { label: <div>Third Question</div>, isQuestion: true },\r\n\t\t\tposition: { x: 650, y: 125 },\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: \"5\",\r\n\t\t\ttype: \"output\", // output node\r\n\t\t\tdata: { label: \"Final Asnwer\", isQuestion: false },\r\n\t\t\tposition: { x: 250, y: 250 },\r\n\t\t},\r\n\t\t// animated edge\r\n\t\t{ id: \"e1-2\", source: \"1\", target: \"2\", animated: true },\r\n\t\t{ id: \"e1-3\", source: \"1\", target: \"3\", animated: true },\r\n\t\t{ id: \"e1-4\", source: \"1\", target: \"4\", animated: true },\r\n\t\t{ id: \"e2-5\", source: \"2\", target: \"5\" },\r\n\t],\r\n\t2: [\r\n\t\t{\r\n\t\t\tid: \"1\",\r\n\t\t\ttype: \"input\", // input node\r\n\t\t\tdata: { label: \"Input Node\" },\r\n\t\t\tposition: { x: 250, y: 25 },\r\n\t\t},\r\n\t\t// default node\r\n\t\t{\r\n\t\t\tid: \"2\",\r\n\t\t\t// you can also pass a React component as a label\r\n\t\t\tdata: { label: <div>Default Node</div> },\r\n\t\t\tposition: { x: 100, y: 125 },\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: \"3\",\r\n\t\t\ttype: \"output\", // output node\r\n\t\t\tdata: { label: \"Output Node\" },\r\n\t\t\tposition: { x: 250, y: 250 },\r\n\t\t},\r\n\t\t// animated edge\r\n\t\t{ id: \"e1-2\", source: \"1\", target: \"2\", animated: true },\r\n\t\t{ id: \"e2-3\", source: \"2\", target: \"3\" },\r\n\t],\r\n\t3: [\r\n\t\t{\r\n\t\t\tid: \"1\",\r\n\t\t\ttype: \"input\", // input node\r\n\t\t\tdata: { label: \"Input Node\" },\r\n\t\t\tposition: { x: 250, y: 25 },\r\n\t\t},\r\n\t\t// default node\r\n\t\t{\r\n\t\t\tid: \"2\",\r\n\t\t\t// you can also pass a React component as a label\r\n\t\t\tdata: { label: <div>Default Node</div> },\r\n\t\t\tposition: { x: 100, y: 125 },\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: \"3\",\r\n\t\t\ttype: \"output\", // output node\r\n\t\t\tdata: { label: \"Output Node\" },\r\n\t\t\tposition: { x: 250, y: 250 },\r\n\t\t},\r\n\t\t// animated edge\r\n\t\t{ id: \"e1-2\", source: \"1\", target: \"2\", animated: true },\r\n\t\t{ id: \"e2-3\", source: \"2\", target: \"3\" },\r\n\t],\r\n};\r\n","/**\r\n *\r\n */\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport GraphCard from \"../components/GraphCard\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport GraphForm from \"../components/GraphForm\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\n\r\nimport { getAllGraphs } from \"../dummy/API\";\r\n\r\nconst AvailableGraphs = ({ canAddGraph }) => {\r\n\tconst [graphs, setGraphs] = useState([]);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\tconst [selectedGraph, setSelectedGraph] = useState({}); // to be passed to GraphForm\r\n\r\n\tconst fetchGraphs = () => {\r\n\t\tconst graphSummaries = getAllGraphs();\r\n\t\tsetGraphs(graphSummaries);\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tfetchGraphs();\r\n\t\t},\r\n\t\t[] // only run this once when you start\r\n\t);\r\n\r\n\tconst openGraphForm = (graph = {}) => {\r\n\t\tsetSelectedGraph(graph);\r\n\t\tsetDrawerIsOpen(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div>\r\n\t\t\t\t<Drawer\r\n\t\t\t\t\tanchor=\"right\"\r\n\t\t\t\t\topen={drawerIsOpen}\r\n\t\t\t\t\tonClose={() => setDrawerIsOpen(false)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<GraphForm\r\n\t\t\t\t\t\tgraphData={selectedGraph}\r\n\t\t\t\t\t\tsetDrawerIsOpen={setDrawerIsOpen}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Drawer>\r\n\t\t\t\t{canAddGraph && (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: 30,\r\n\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\tflexWrap: \"wrap\",\r\n\t\t\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tstartIcon={<AddCircleOutlineIcon />}\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\topenGraphForm();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tAdd New Graph\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\tflexWrap: \"wrap\",\r\n\t\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{graphs.map((graph) => (\r\n\t\t\t\t\t\t<GraphCard\r\n\t\t\t\t\t\t\tid={graph.id}\r\n\t\t\t\t\t\t\ttitle={graph.title}\r\n\t\t\t\t\t\t\tsummary={graph.summary}\r\n\t\t\t\t\t\t\timageURL={graph.imageURL}\r\n\t\t\t\t\t\t\ttags={graph.tags}\r\n\t\t\t\t\t\t\teditGraphMetaData={() => {\r\n\t\t\t\t\t\t\t\topenGraphForm(graph);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default AvailableGraphs;\r\n","/**\r\n * This menu goes in the Sidebar for a graph.\r\n * It allows a user to drag a new node into the graph\r\n */\r\n\r\nimport React from \"react\";\r\n\r\nconst InsertNodeSidebar = () => {\r\n\tconst onDragStart = (event, nodeType) => {\r\n\t\tevent.dataTransfer.setData(\"application/reactflow\", nodeType);\r\n\t\tevent.dataTransfer.effectAllowed = \"move\";\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={{ margin: 20 }}>\r\n\t\t\t\tYou can drag these nodes to the pane on the right.\r\n\t\t\t</div>\r\n\t\t\t{/* <div\r\n\t\t\t\tclassName=\"dndnode input\"\r\n\t\t\t\tonDragStart={(event) => onDragStart(event, \"input\")}\r\n\t\t\t\tdraggable\r\n\t\t\t>\r\n\t\t\t\tInput Node\r\n\t\t\t</div> */}\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmargin: 20,\r\n\t\t\t\t\tpadding: 10,\r\n\t\t\t\t\tborderStyle: \"solid\",\r\n\t\t\t\t\tborderRadius: 3,\r\n\t\t\t\t\tborderColor: \"black\",\r\n\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\twidth: 200,\r\n\t\t\t\t}}\r\n\t\t\t\tonDragStart={(event) => onDragStart(event, \"default\")}\r\n\t\t\t\tdraggable\r\n\t\t\t>\r\n\t\t\t\tQuestion/Answer\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmargin: 20,\r\n\t\t\t\t\tpadding: 10,\r\n\t\t\t\t\tborderStyle: \"solid\",\r\n\t\t\t\t\tborderRadius: 3,\r\n\t\t\t\t\tborderColor: \"#ff0072\",\r\n\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\twidth: 200,\r\n\t\t\t\t}}\r\n\t\t\t\tonDragStart={(event) => onDragStart(event, \"output\")}\r\n\t\t\t\tdraggable\r\n\t\t\t>\r\n\t\t\t\tFinal Answer\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InsertNodeSidebar;\r\n","/**\r\n * This the page where the bulk of the work happens.\r\n * Depending on the privivliges of the user, they can either edit the graph or add translation to it.\r\n * We use side menus to let the user insert a new node.\r\n * When the user clicks on a node, they can open up a side meny to edit the text on it, or translate.\r\n */\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ReactFlow, {\r\n\tReactFlowProvider,\r\n\tremoveElements,\r\n\taddEdge,\r\n\tMiniMap,\r\n\tControls,\r\n\tBackground,\r\n} from \"react-flow-renderer\";\r\n\r\nimport { getGraphWithID } from \"../dummy/API\";\r\nimport InsertNodeSidebar from \"../components/InsertNodeSidebar\";\r\n\r\nlet id = 10;\r\nconst getId = () => `dndnode_${id++}`;\r\n\r\nconst Graph = ({ canEdit, canTranslate }) => {\r\n\tconst location = useLocation();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\r\n\tconst reactFlowWrapper = useRef(null);\r\n\tconst [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n\tconst [elements, setElements] = useState([]);\r\n\r\n\tconst fetchGraphData = () => {\r\n\t\tconst graphData = getGraphWithID(location.state.id);\r\n\t\tconsole.log(graphData);\r\n\t\tsetElements(graphData);\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tfetchGraphData();\r\n\t\t},\r\n\t\t[] // fetch graoh data only once when you first load the graph\r\n\t);\r\n\r\n\tconst onElementClick = (event, element) => console.log(element);\r\n\r\n\tconst onElementsRemove = (elementsToRemove) =>\r\n\t\tsetElements((els) => removeElements(elementsToRemove, els));\r\n\r\n\tconst onConnect = (params) => setElements((els) => addEdge(params, els));\r\n\r\n\tconst onLoad = (_reactFlowInstance) => {\r\n\t\tsetReactFlowInstance(_reactFlowInstance);\r\n\t\t_reactFlowInstance.fitView(); // center graph on load TODO center the actual reactFlowInstance\r\n\t};\r\n\r\n\tconst onDragOver = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.dataTransfer.dropEffect = \"move\";\r\n\t};\r\n\r\n\tconst onDrop = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n\t\tconst type = event.dataTransfer.getData(\"application/reactflow\");\r\n\t\tconst position = reactFlowInstance.project({\r\n\t\t\tx: event.clientX - reactFlowBounds.left,\r\n\t\t\ty: event.clientY - reactFlowBounds.top,\r\n\t\t});\r\n\t\tconst newNode = {\r\n\t\t\tid: getId(),\r\n\t\t\ttype,\r\n\t\t\tposition,\r\n\t\t\tdata: { label: `${type} node` },\r\n\t\t};\r\n\r\n\t\tsetElements((es) => es.concat(newNode));\r\n\t};\r\n\r\n\tif (isLoading)\r\n\t\treturn (\r\n\t\t\t<div style={{ textAlign: \"center\" }}>\r\n\t\t\t\t<CircularProgress style={{ margin: 50 }} />\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<div style={{ display: \"flex\", height: \"90vh\" }}>\r\n\t\t\t<ReactFlowProvider>\r\n\t\t\t\t<div style={{ width: \"80%\" }} ref={reactFlowWrapper}>\r\n\t\t\t\t\t<ReactFlow\r\n\t\t\t\t\t\telements={elements}\r\n\t\t\t\t\t\tonElementsRemove={onElementsRemove}\r\n\t\t\t\t\t\tonConnect={onConnect}\r\n\t\t\t\t\t\tonLoad={onLoad}\r\n\t\t\t\t\t\tonDrop={onDrop}\r\n\t\t\t\t\t\tonDragOver={onDragOver}\r\n\t\t\t\t\t\tsnapToGrid={true}\r\n\t\t\t\t\t\tsnapGrid={[15, 15]}\r\n\t\t\t\t\t\tdeleteKeyCode={46} /* delete-key */\r\n\t\t\t\t\t\tnodesConnectable={canEdit}\r\n\t\t\t\t\t\tonElementClick={onElementClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MiniMap\r\n\t\t\t\t\t\t\tnodeStrokeColor={(n) => {\r\n\t\t\t\t\t\t\t\tif (n.style?.background) return n.style.background;\r\n\t\t\t\t\t\t\t\tif (n.type === \"input\") return \"#0041d0\";\r\n\t\t\t\t\t\t\t\tif (n.type === \"output\") return \"#ff0072\";\r\n\t\t\t\t\t\t\t\tif (n.type === \"default\") return \"#1a192b\";\r\n\r\n\t\t\t\t\t\t\t\treturn \"#eee\";\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tnodeColor={(n) => {\r\n\t\t\t\t\t\t\t\tif (n.style?.background) return n.style.background;\r\n\r\n\t\t\t\t\t\t\t\treturn \"#fff\";\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tnodeBorderRadius={2}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Controls />\r\n\t\t\t\t\t\t<Background color=\"#aaa\" gap={16} />\r\n\t\t\t\t\t</ReactFlow>\r\n\t\t\t\t</div>\r\n\t\t\t\t<InsertNodeSidebar />\r\n\t\t\t</ReactFlowProvider>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Graph;\r\n\r\nconst initialElements = [\r\n\t{\r\n\t\tid: \"1\",\r\n\t\ttype: \"input\",\r\n\t\tdata: { label: \"Node 1\" },\r\n\t\tposition: { x: 250, y: 5 },\r\n\t},\r\n\t// you can also pass a React Node as a label\r\n\t{ id: \"2\", data: { label: <div>Node 2</div> }, position: { x: 100, y: 100 } },\r\n\t{ id: \"e1-2\", source: \"1\", target: \"2\", animated: true },\r\n];\r\n","/**\r\n * This page is displayed if the user enters an unknown (a.k.a. wrong) URL.\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport FRONT_END_ROUTE from \"../resources/routes/frontEndRoutes\";\r\n\r\nconst NotFound = () => {\r\n\treturn (\r\n\t\t<div style={{ textAlign: \"center\" }}>\r\n\t\t\t<h1>Oops!</h1>\r\n\t\t\t<br />\r\n\t\t\t<p>Not too sure what you are looking for :/</p>\r\n\t\t\t<br />\r\n\t\t\t<p>\r\n\t\t\t\tTry going to <Link to={FRONT_END_ROUTE.HOME}>our home page</Link>, maybe\r\n\t\t\t\tyou will find what you are looking for there ;)\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useState } from \"react\";\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tRedirect,\n} from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./style/theme\";\n\nimport FRONT_END_ROUTE from \"./resources/routes/frontEndRoutes\";\n\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport LogIn from \"./pages/LogIn\";\nimport SignUp from \"./pages/SignUp\";\nimport AvailableGraphs from \"./pages/AvailableGraphs\";\nimport Graph from \"./pages/Graph\";\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n\tconst loggedOutPorfile = {\n\t\tusername: \"\",\n\t\tisAdmin: false,\n\t\tisDoctor: false,\n\t\tisTranslator: false,\n\t};\n\n\tconst [userProfile, setUserProfile] = useState(loggedOutPorfile);\n\n\tconst isLoggedIn = () => {\n\t\treturn userProfile.username != \"\";\n\t};\n\n\tconst logout = () => {\n\t\tsetUserProfile(loggedOutPorfile);\n\t};\n\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<Router>\n\t\t\t\t<Navbar isLoggedIn={isLoggedIn()} logout={logout} />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path={FRONT_END_ROUTE.HOME} component={Home} />\n\t\t\t\t\t<Route exact path={FRONT_END_ROUTE.LOGIN}>\n\t\t\t\t\t\t<LogIn setUserProfile={setUserProfile} userProfile={userProfile} />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path={FRONT_END_ROUTE.SIGN_UP}>\n\t\t\t\t\t\t<SignUp setUserProfile={setUserProfile} isLoggedIn={isLoggedIn()} />\n\t\t\t\t\t</Route>\n\t\t\t\t\t{/* <Route exact path={FRONT_END_ROUTE.AVAILABLE_GRAPHS}>\n\t\t\t\t\t\t<AvailableGraphs\n\t\t\t\t\t\t\tcanAddGraph={userProfile.isAdmin || userProfile.isDoctor}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path={FRONT_END_ROUTE.GRAPH + \"/:title\"}>\n\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\tcanEdit={userProfile.isDoctor || userProfile.isAdmin}\n\t\t\t\t\t\t\tcanTranslate={userProfile.isTranslator || userProfile.isAdmin}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route> */}\n\t\t\t\t\t<Route exact path={FRONT_END_ROUTE.AVAILABLE_GRAPHS}>\n\t\t\t\t\t\t{isLoggedIn() ? (\n\t\t\t\t\t\t\t<AvailableGraphs\n\t\t\t\t\t\t\t\tcanAddGraph={userProfile.isAdmin || userProfile.isDoctor}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Redirect to={FRONT_END_ROUTE.LOGIN} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path={FRONT_END_ROUTE.GRAPH + \"/:title\"}>\n\t\t\t\t\t\t{isLoggedIn() ? (\n\t\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\t\tcanEdit={userProfile.isDoctor || userProfile.isAdmin}\n\t\t\t\t\t\t\t\tcanTranslate={userProfile.isTranslator}\n\t\t\t\t\t\t\t\tisAdmin={userProfile.isAdmin}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Redirect to={FRONT_END_ROUTE.LOGIN} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}